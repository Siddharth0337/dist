{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { BaseUrls } from '../base-urls';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class Response {\n  constructor() {\n    this.data = [];\n  }\n\n}\nexport let DbService = /*#__PURE__*/(() => {\n  class DbService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.categoies = new BehaviorSubject([]);\n      this.categoriesRetreivedBool = false;\n      this.products = new BehaviorSubject([]);\n      this.productsRetreivedBool = false;\n      this.users = new BehaviorSubject([]);\n      this.usersRetreivedBool = false;\n      this.shipments = new BehaviorSubject([]);\n      this.shipmentRetreivedBool = false;\n    }\n\n    getProducts() {\n      this.httpClient.get(BaseUrls.getUrl(BaseUrls.PRODUCT_GROUPURL)).subscribe({\n        next: ({\n          code,\n          data,\n          message\n        }) => {\n          this.products.next(data);\n          this.productsRetreivedBool = true;\n        },\n        error: error => {\n          console.log(error);\n        }\n      });\n    }\n\n    getCategories() {\n      this.httpClient.get(BaseUrls.getUrl(BaseUrls.CATEGORIES_GROUPURL)).subscribe({\n        next: ({\n          code,\n          data,\n          message\n        }) => {\n          this.categoies.next(data);\n          this.categoriesRetreivedBool = true;\n        },\n        error: error => {\n          console.log(error);\n        }\n      });\n    }\n\n    getUsers() {\n      this.httpClient.get(BaseUrls.getUrl(BaseUrls.USER_GROUPURL)).subscribe({\n        next: ({\n          code,\n          data,\n          message\n        }) => {\n          this.users.next(data);\n          this.usersRetreivedBool = true;\n        },\n        error: error => {\n          console.log(error);\n        }\n      });\n    }\n\n    getShipments(shipmentStatus = 0) {\n      this.httpClient.get(`${BaseUrls.getUrl(BaseUrls.SHIPMENT_GROUPURL)}/${shipmentStatus}`).subscribe({\n        next: ({\n          data\n        }) => {\n          this.shipments.next(data);\n          this.shipmentRetreivedBool = true;\n        },\n        error: error => {\n          console.log(error);\n        }\n      });\n    }\n\n  }\n\n  DbService.ɵfac = function DbService_Factory(t) {\n    return new (t || DbService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  DbService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DbService,\n    factory: DbService.ɵfac,\n    providedIn: 'root'\n  });\n  return DbService;\n})();","map":null,"metadata":{},"sourceType":"module"}